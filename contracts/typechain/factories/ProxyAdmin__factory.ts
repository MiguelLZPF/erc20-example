/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { ProxyAdmin } from "../ProxyAdmin";

export class ProxyAdmin__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ProxyAdmin> {
    return super.deploy(overrides || {}) as Promise<ProxyAdmin>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ProxyAdmin {
    return super.attach(address) as ProxyAdmin;
  }
  connect(signer: Signer): ProxyAdmin__factory {
    return super.connect(signer) as ProxyAdmin__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ProxyAdmin {
    return new Contract(address, _abi, signerOrProvider) as ProxyAdmin;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "contract TransparentUpgradeableProxy",
        name: "proxy",
        type: "address",
      },
      {
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "changeProxyAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract TransparentUpgradeableProxy",
        name: "proxy",
        type: "address",
      },
    ],
    name: "getProxyAdmin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract TransparentUpgradeableProxy",
        name: "proxy",
        type: "address",
      },
    ],
    name: "getProxyImplementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract TransparentUpgradeableProxy",
        name: "proxy",
        type: "address",
      },
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "upgrade",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract TransparentUpgradeableProxy",
        name: "proxy",
        type: "address",
      },
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50600061001b61006a565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35061006e565b3390565b6107d28061007d6000396000f3fe60806040526004361061006b5760003560e01c8063204e1c7a14610070578063715018a6146100a65780637eff275e146100bd5780638da5cb5b146100dd5780639623609d146100f257806399a88ec414610105578063f2fde38b14610125578063f3b7dead14610145575b600080fd5b34801561007c57600080fd5b5061009061008b36600461051d565b610165565b60405161009d919061067c565b60405180910390f35b3480156100b257600080fd5b506100bb6101eb565b005b3480156100c957600080fd5b506100bb6100d836600461055c565b61027d565b3480156100e957600080fd5b5061009061031e565b6100bb610100366004610594565b61032d565b34801561011157600080fd5b506100bb61012036600461055c565b6103d3565b34801561013157600080fd5b506100bb61014036600461051d565b61043e565b34801561015157600080fd5b5061009061016036600461051d565b6104fe565b6000806000836001600160a01b03166040516101809061065c565b600060405180830381855afa9150503d80600081146101bb576040519150601f19603f3d011682016040523d82523d6000602084013e6101c0565b606091505b5091509150816101cf57600080fd5b808060200190518101906101e39190610540565b949350505050565b6101f3610519565b6001600160a01b031661020461031e565b6001600160a01b0316146102335760405162461bcd60e51b815260040161022a90610739565b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b610285610519565b6001600160a01b031661029661031e565b6001600160a01b0316146102bc5760405162461bcd60e51b815260040161022a90610739565b6040516308f2839760e41b81526001600160a01b03831690638f283970906102e890849060040161067c565b600060405180830381600087803b15801561030257600080fd5b505af1158015610316573d6000803e3d6000fd5b505050505050565b6000546001600160a01b031690565b610335610519565b6001600160a01b031661034661031e565b6001600160a01b03161461036c5760405162461bcd60e51b815260040161022a90610739565b60405163278f794360e11b81526001600160a01b03841690634f1ef28690349061039c9086908690600401610690565b6000604051808303818588803b1580156103b557600080fd5b505af11580156103c9573d6000803e3d6000fd5b5050505050505050565b6103db610519565b6001600160a01b03166103ec61031e565b6001600160a01b0316146104125760405162461bcd60e51b815260040161022a90610739565b604051631b2ce7f360e11b81526001600160a01b03831690633659cfe6906102e890849060040161067c565b610446610519565b6001600160a01b031661045761031e565b6001600160a01b03161461047d5760405162461bcd60e51b815260040161022a90610739565b6001600160a01b0381166104a35760405162461bcd60e51b815260040161022a906106f3565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000806000836001600160a01b03166040516101809061066c565b3390565b60006020828403121561052e578081fd5b813561053981610784565b9392505050565b600060208284031215610551578081fd5b815161053981610784565b6000806040838503121561056e578081fd5b823561057981610784565b9150602083013561058981610784565b809150509250929050565b6000806000606084860312156105a8578081fd5b83356105b381610784565b92506020848101356105c481610784565b9250604085013567ffffffffffffffff808211156105e0578384fd5b818701915087601f8301126105f3578384fd5b8135818111156106055761060561076e565b604051601f8201601f19168101850183811182821017156106285761062861076e565b60405281815283820185018a101561063e578586fd5b81858501868301378585838301015280955050505050509250925092565b635c60da1b60e01b815260040190565b6303e1469160e61b815260040190565b6001600160a01b0391909116815260200190565b600060018060a01b038416825260206040818401528351806040850152825b818110156106cb578581018301518582016060015282016106af565b818111156106dc5783606083870101525b50601f01601f191692909201606001949350505050565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461079957600080fd5b5056fea26469706673582212209297c2939550ee90fe222d10730d3fa066f8e62cc76fd4e40e532f291055cbdd64736f6c63430008000033";
